#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        Click {
            bindings = <&mkp MB1>;
            key-positions = <18 19>;
        };

        Click2 {
            bindings = <&mkp MB2>;
            key-positions = <19 20>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 0>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        attomark: attomark {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_2 &kp AT>;
            label = "ATTOMARK";
        };

        kakko: kakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_1 &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS>;
            label = "KAKKO";
        };

        kagikakko: kagikakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_1 &kp LEFT_BRACKET &kp RIGHT_BRACKET>;
            label = "KAGIKAKKO";
        };

        nakaguro: nakaguro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_2 &kp MINUS &kp SPACE &kp LANGUAGE_1>;
            label = "NAKAGURO";
        };

        arrowright: arrowright {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_1 &kp Z &kp L &kp ENTER>;
            label = "ARROWRIGHT";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                   &kp W   &kp E    &kp R         &kp T                                                 &kp Y                 &kp U    &kp I      &kp O    &kp P
&mt LS(LEFT_COMMAND) A  &kp S   &lt 3 D  &lt 2 F       &kp G             &kp LG(LC(SPACE))      &kp F10      &kp H                 &lt 2 J  &lt 3 K    &lt 4 L  &kp COLON
&mt LEFT_SHIFT Z        &kp X   &kp C    &kp V         &kp B             &kp BACKSPACE          &kp UNDER    &kp N                 &kp M    &kp COMMA  &kp DOT  &kp SLASH
&trans                  &trans  &trans   &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 1 SPACE            &lt 1 ENTER  &mt RSHIFT BACKSPACE                               &mt RIGHT_SHIFT LANGUAGE_1
            >;

            sensor-bindings = <&inc_dec_kp LG(MINUS) LG(PLUS)>;
        };

        FnNum {
            bindings = <
&kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp HASH      &kp DOLLAR  &kp PERCENT                                                &kp AMPERSAND  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
&kakko            &kagikakko         &kp PLUS      &kp MINUS   &kp EQUAL    &trans                        &kp TILDE       &kp INT_YEN    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans
&trans            &trans             &kp ASTERISK  &kp SLASH   &trans       &kp LG(LS(LC(NUMBER_4)))      &kp UNDERSCORE  &attomark      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&trans            &trans             &trans        &trans      &arrowright  &kp SPACE                     &kp MINUS       &kp EXCL                                                 &kp QUESTION
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        ARROW {
            bindings = <
&kp ESCAPE                              &kp F2         &trans     &kp F4           &trans                                                     &trans         &trans  &kp UP_ARROW    &trans           &trans
&kp TAB                                 &kp LG(LS(Z))  &kp LG(Z)  &kp KP_NUMBER_6  &trans     &kp LC(LA(KP_NUMBER_0))      &kp RC(J)          &trans         &trans  &kp LEFT_ARROW  &kp RIGHT_ARROW  &mt RIGHT_SHIFT SEMICOLON
&mt LEFT_SHIFT LG(LA(LS(KP_NUMBER_0)))  &trans         &trans     &trans           &trans     &trans                       &trans             &trans         &trans  &kp DOWN_ARROW  &trans           &nakaguro
&trans                                  &trans         &trans     &kp LEFT_ALT     &kp ENTER  &kp SPACE                    &kp RIGHT_COMMAND  &kp BACKSPACE                                           &mt RIGHT_SHIFT LANGUAGE_2
            >;

            sensor-bindings = <&inc_dec_kp LG(F12) LG(F11)>;
        };

        MouseScroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans                            &trans     &trans                         &trans  &trans       &trans
&trans  &trans  &trans  &trans  &trans  &trans         &trans     &trans     &mt RIGHT_COMMAND RS(RC(TAB))  &trans  &kp RC(TAB)  &trans
&trans  &trans  &trans  &trans  &trans  &trans         &trans     &trans     &trans                         &trans  &trans       &trans
&trans  &trans  &trans  &trans  &trans  &kp LG(F)      &kp RG(T)  &kp RG(W)                                                      &kp RG(RS(T))
            >;
        };

        MissionControl {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans              &kp RC(UP_ARROW)     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &kp LC(LEFT_ARROW)  &kp RC(RIGHT_ARROW)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans              &kp RC(DOWN_ARROW)   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                   &trans
            >;
        };

        Bluetooth {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
