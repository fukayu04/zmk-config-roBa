#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        emoji: emoji {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "EMOJI";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                      &kp T                                                   &kp Y            &kp U    &kp I               &kp O    &kp P
&kp A             &kp S         &kp D         &lt 2 F                    &kp G               &kp LG(LC(SPACE))      &kp F10      &kp H            &lt 2 J  &lt_to_layer_0 3 K  &kp L    &kp COLON
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                      &kp B               &kp BACKSPACE          &kp UNDER    &kp N            &kp M    &kp COMMA           &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 5 LEFT_ALT  &lt 2 LEFT_COMMAND  &lt 1 SPACE            &lt 1 ENTER  &lt 1 BACKSPACE                                        &kp LANG4
            >;

            sensor-bindings = <&inc_dec_kp LC(MINUS) LC(PLUS)>;
        };

        FnNum {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &kp RS(NUMBER_6)  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans      &kp TILDE    &kp F6            &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &kp INT_YEN  &trans            &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&trans  &trans  &trans  &trans  &trans  &trans      &kp MINUS    &kp RS(NUMBER_1)                                            &kp RS(SLASH)
            >;

            sensor-bindings = <&inc_dec_kp LG(F2) LG(F1)>;
        };

        ARROW {
            bindings = <
&kp MINUS                               &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                                   &kp CARET         &kp AMPERSAND      &kp UP_ARROW    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp TAB                                 &kp LG(LS(Z))    &kp LG(Z)        &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp LEFT_ARROW  &kp RIGHT_ARROW       &kp PERCENT
&mt LEFT_SHIFT LG(LA(LS(KP_NUMBER_0)))  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp DOWN_ARROW  &kp RIGHT_BRACE       &kp BACKSLASH
&trans                                  &trans           &trans           &trans           &trans        &trans                       &trans          &trans                                                                     &kp LG(LANG1)
            >;

            sensor-bindings = <&inc_dec_kp LG(F12) LG(F11)>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans           &trans  &trans       &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &kp RC(RS(TAB))  &trans  &kp RC(TAB)  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans           &trans  &trans       &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                        &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &kp RC(LEFT_ARROW)  &kp RC(UP_ARROW)  &kp RC(RIGHT_ARROW)  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1            &mkp MB2          &trans               &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans              &trans            &trans               &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                             &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
